"""Add start day selection functionality

Revision ID: 0004
Revises: 0003
Create Date: 2025-08-07 16:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0004'
down_revision = '0003'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add start_day column with default value of 1
    op.add_column('users', sa.Column('start_day', sa.Integer(), nullable=True))
    
    # Add has_chosen_start_day column with default value of False
    op.add_column('users', sa.Column('has_chosen_start_day', sa.Boolean(), nullable=True))
    
    # Set default values for existing users
    op.execute("UPDATE users SET start_day = 1 WHERE start_day IS NULL")
    op.execute("UPDATE users SET has_chosen_start_day = false WHERE has_chosen_start_day IS NULL")
    
    # Make columns non-nullable after setting defaults
    op.alter_column('users', 'start_day', nullable=False, server_default='1')
    op.alter_column('users', 'has_chosen_start_day', nullable=False, server_default='false')
    
    # Add check constraint to ensure start_day is between 1 and 33
    op.create_check_constraint(
        'check_start_day_range',
        'users',
        'start_day >= 1 AND start_day <= 33'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('check_start_day_range', 'users', type_='check')
    op.drop_column('users', 'has_chosen_start_day')
    op.drop_column('users', 'start_day')
    # ### end Alembic commands ###